//Admin login (to get authentication and role check)
POST http://localhost:3000/user/login
Content-Type: application/json
Accept: application/json

{
  "username": "admin",
  "password": "password"
}

> {%
    client.test("User logged in successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        const responseBody = response.body;
        client.global.set("token", responseBody.token);  // Token opslaan voor later gebruik
        client.assert(client.global.get('token') === responseBody.token)
    });
%}

###
### Invalidate the token
###
DELETE {{protocol}}{{host}}:{{port}}/user/logout
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}
###

// Good Weather Test voor PATCH /auctions/update/1 - Succesvolle aanvraag moet een statuscode 200 retourneren
PATCH {{protocol}}{{host}}:{{port}}/auction/1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "id": 4,
  "name": "Auction 1",
  "description": "Dit is een veiling",
  "startPrice": 0,
  "endTime": "",
  "categories": {

  },
  "bids": [
    {"bidAmount": 1, "userId": "1"},
    {"bidAmount": 2, "userId": "2"},
    {"bidAmount": 3, "userId": "3"}
  ]
}
###
POST {{protocol}}{{host}}:{{port}}/auction/1/bid
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "bidAmount": 100,
  "userId": 2
}
###
GET {{protocol}}{{host}}:{{port}}/auction/1
Accept: application/json
Authorization: Bearer {{token}}
###
GET {{protocol}}{{host}}:{{port}}/user/users
Accept: application/json
Authorization: Bearer {{token}}